var moment = require("moment");

var esut = require('easy_util');
var digestUtil = esut.digestUtil;
var log = esut.log;
var pageUtil = esut.pageUtil;


var util = require('mcp_util');
var dateMathUtil=util.dateMathUtil;

var dc = require('mcp_db').dc;

var config = require("mcp_config");
var ec = config.ec;
var ac = config.ac;
var game = config.game;

var cons = require("mcp_constants");
var gameType = cons.gameType;
var accountSelect = cons.accountSelect;

var MoneyLogPageControl = function(){};

MoneyLogPageControl.prototype.handle = function(headNode, bodyNode, cb)
{
    console.log(bodyNode);
    var self = this;
    var cmd = headNode.cmd;
    self[cmd[1]](headNode, bodyNode, cb);
};

MoneyLogPageControl.prototype.add = function(headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {title:"新增账户流水"};
    cb(null, backBodyNode);
};

MoneyLogPageControl.prototype.detail = function(headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {title:"账户流水详情"};
    cb(null, backBodyNode);
};

MoneyLogPageControl.prototype.list = function(headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {title:"账户流水查询"};
    if(bodyNode.sort == undefined)
    {
        backBodyNode.sort = {createTime:-1};
    }
    pageUtil.parse(bodyNode, backBodyNode);
    log.info(backBodyNode);
    var table = dc.main.get("moneylog");
    //页面显示科目查询项
    var selectValues=accountSelect.getInfoByCode(headNode.userType);
    backBodyNode.selectValues=JSON.stringify(selectValues.accounts);
    var add = backBodyNode.add;
    if (add.startDate != null && add.endDate != null && add.startDate != "" && add.endDate != "") {
        add.startDate = dateMathUtil.getEarlyTime(add.startDate);
        add.endDate =  dateMathUtil.getLaterTime(add.endDate);
        backBodyNode.cond.createTime = {$gte: add.startDate, $lte: add.endDate};
        //页面显示时间格式
        add.startDate = moment(add.startDate).format("YYYY-MM-DD");
        add.endDate =  moment(add.endDate).format("YYYY-MM-DD");
    }
    console.log("moneylog:" +JSON.stringify(backBodyNode.cond.createTime));
    var cursor = table.find(backBodyNode.cond, {}, []).sort(backBodyNode.sort).limit(backBodyNode.skip, backBodyNode.limit);
    cursor.toArray(function(err, data){
        for(var key in data)
        {
            var set = data[key];
            set.subject = ac.getInfo(set.roleId, set.accountId, set.typeId, set.subjectId);
            set.createTime = moment(set.createTime).format("YYYY-MM-DD HH:mm:ss")
        }
        backBodyNode.rst = data;
        backBodyNode.count = cursor.count(function(err, count){
            backBodyNode.count = count;
            cb(null, backBodyNode);
        });
    });
};

MoneyLogPageControl.prototype.subjectList = function(headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {title:"查看系统账户科目"};
    backBodyNode.rst = ac.getInfo();
    cb(null, backBodyNode);
};

MoneyLogPageControl.prototype.selectSubject = function(headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {title:"选择科目"};
    backBodyNode.select = bodyNode.select;
    backBodyNode.rst = ac.getInfo();
    cb(null, backBodyNode);
};

MoneyLogPageControl.prototype.dblist = function(headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {title:"游戏查询"};
    pageUtil.parse(bodyNode, backBodyNode);
    var table = dc.main.get("game");
    var cursor = table.find(backBodyNode.cond, {}, []).sort(backBodyNode.sort).limit(backBodyNode.skip, backBodyNode.limit);
    cursor.toArray(function(err, data){
        for(var key in data)
        {
            var set = data[key];
            set.status = gameStatus.getInfoById(set.status);
            set.type = gameType.getInfoById(set.type);
        }
        backBodyNode.rst = data;
        backBodyNode.count = cursor.count(function(err, count){
            backBodyNode.count = count;
            cb(null, backBodyNode);
        });
    });
};

module.exports = new MoneyLogPageControl();