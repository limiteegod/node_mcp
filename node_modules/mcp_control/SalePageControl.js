var esut = require('easy_util');
var dc = require('mcp_db').dc;
var esdb = require('easy_db');
var config = require('mcp_config');
var game = config.game;
var dateUtil = esut.dateUtil;
var digestUtil = esut.digestUtil;
var log = esut.log;
var pageUtil = esut.pageUtil;
var async = require('async');
var moment = require('moment');


var cons = require('mcp_constants');
var ticketPrintStatus = cons.ticketPrintStatus;


var SalePageControl = function () {
};

SalePageControl.prototype.handle = function (headNode, bodyNode, cb) {
    var self = this;
    var cmd = headNode.cmd;
    self[cmd[1]](headNode, bodyNode, cb);
};


SalePageControl.prototype.term = function (headNode, bodyNode, cb) {
    var self = this;
    var backBodyNode = {title: "view terms"};
    backBodyNode.sort = {id: -1};
    pageUtil.parse(bodyNode, backBodyNode);
    var table = dc.main.get("termreport");
    backBodyNode.cond.customerId = headNode.userId;
    backBodyNode.game = game.getInfo();
    var add = backBodyNode.add;
    if (add.startDate != null && add.endDate != null && add.startDate != "" && add.endDate != "") {
        backBodyNode.cond.createTime = {$gte: add.startDate, $lte: add.endDate};
    }
    var cursor = table.find(backBodyNode.cond, {}, []).sort(backBodyNode.sort).limit(backBodyNode.skip, backBodyNode.limit);

    cursor.toArray(function (err, data) {
        for (var key in data) {
            var set = data[key];
            set.createTime = dateUtil.toString(set.createTime);
        }
        backBodyNode.rst = data;
        backBodyNode.count = cursor.count(function (err, count) {
            backBodyNode.count = count;
            cb(null, backBodyNode);
        });
    });
}

SalePageControl.prototype.day = function (headNode, bodyNode, cb) {
    var self = this;
    var backBodyNode = {title: "view day"};
    //获取游戏种类
    backBodyNode.game = game.getInfo();
    pageUtil.parse(bodyNode, backBodyNode);
    //时间条件
    var add = backBodyNode.add;
    var addCond = "";
    if (add.startDate != null && add.endDate != null && add.startDate != "" && add.endDate != "") {
        backBodyNode.startDate = add.startDate;
        backBodyNode.endDate = add.endDate;
    }else{
        add.startDate = moment().format("YYYY-MM-DD");
        add.endDate = moment().format("YYYY-MM-DD");
    }
    addCond = "and createTime>=" + moment(add.startDate, "YYYY-MM-DD").valueOf() + " and createTime<=" + moment(add.endDate, "YYYY-MM-DD").valueOf();
    //请求条件
    backBodyNode.cond.customerId = headNode.userId;
    var reqDate = backBodyNode.cond;
    var cond = "";
    for (var key in reqDate) {
        cond += "and " + key + "='" + reqDate[key]+"'";
    }
    //分页
    var pageCond="limit "+backBodyNode.skip+","+backBodyNode.limit;

    //链接查询
    var conn = dc.main.getConn();
    if (dc.main.type == esdb.prop.dbType.mysql) {
        var sql = "select gameCode,count(outerId) as salenum,sum(amount) as saleamount,(select count(outerId) from tticket B where A.gameCode=B.gameCode and A.customerId=B.customerId and B.status=1200 "+ addCond+") as prizenum ,(select sum(bonus) from tticket C where A.gameCode=C.gameCode and A.customerId=C.customerId and C.status=1200 "+ addCond+") as prizeamount from tticket A where 1=1 " + cond +"  "+ addCond+" group by gamecode  "+pageCond;
        console.log("sql: "+sql);
        conn.execute(sql, {}, function (err, data) {
            if(err){
                console.log(err);

            }else{
            backBodyNode.rst = data;
            backBodyNode.count = data.length;
            cb(null, backBodyNode);
            }
        });
    } else {

        //其他数据类型

    }
}


SalePageControl.prototype.print = function (headNode, bodyNode, cb) {
    var self = this;
    var backBodyNode = {title: "view print"};
    pageUtil.parse(bodyNode, backBodyNode);
    backBodyNode.cond.customerId = headNode.userId;
    backBodyNode.game = game.getInfo();
    backBodyNode.sort={id: -1};
    var add = backBodyNode.add;
    if (add.startDate != null && add.endDate != null && add.startDate != "" && add.endDate != "") {
        backBodyNode.cond.createTime = {$gte: add.startDate, $lte: add.endDate};
    }

    async.waterfall([
        function (cb) {
            var table = dc.main.get("tticket");
            var cursor = table.find(backBodyNode.cond, {}, []).sort(backBodyNode.sort).limit(backBodyNode.skip, backBodyNode.limit);
            cursor.dateToString();
            cursor.toArray(function (err, data) {
                for (var key in data) {
                    var set = data[key];
                    set.game = game.getInfo(set.gameCode);
                    set.printStatus = ticketPrintStatus.getInfoById(set.printStatus);
                }

                backBodyNode.rst = data;
                backBodyNode.count = cursor.count(function (err, count) {
                    backBodyNode.count = count;
                    cb(null, data);
                });
            });
        }, function (ttickets, cb) {
            async.each(ttickets, function (row, callback) {
                var table = dc.main.get("torder");
                table.findOne({id: row.orderId}, {}, [], function (err, data) {
                    if (err) {
                        callback(ec.E0999);
                    }
                    else {
                        if (data) {
                            row.outerId = data.outerId;
                        }
                        callback();
                    }
                });
            }, function (err) {
                cb(err);
            })
        }

    ], function (err) {
        cb(err, backBodyNode);
    })

}

module.exports = new SalePageControl();