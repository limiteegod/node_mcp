var esut = require('easy_util');
var digestUtil = esut.digestUtil;
var log = esut.log;
var pageUtil = esut.pageUtil;
var dc = require('mcp_db').dc;
var config = require('mcp_config');
var game = config.game;
var cons = require('mcp_constants');
var gameType = cons.gameType;
var gameStatus=cons.gameStatus;

var GamePageControl = function(){};

GamePageControl.prototype.handle = function(headNode, bodyNode, cb)
{
    var self = this;
    var cmd = headNode.cmd;
    self[cmd[1]](headNode, bodyNode, cb);
};


GamePageControl.prototype.list = function(headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {title:"游戏查询"};
    backBodyNode.rst = game.getInfo();
    cb(null, backBodyNode);
};

GamePageControl.prototype.control = function(headNode, bodyNode, cb)
{

    var self = this;
    var backBodyNode = {title:"游戏控制"};
    pageUtil.parse(bodyNode, backBodyNode);
    var table = dc.mg.get("gamePermission");
    var cursor = table.find(backBodyNode.cond, {}, []).sort(backBodyNode.sort).skip(backBodyNode.skip).limit(backBodyNode.limit);
    cursor.toArray(function(err, data){
        for(var key in data)
        {
            var set = data[key];
            set.game = game.getInfo(set._id);
            set.on_off=gameStatus.getInfoById(set.gamePermission).des;
        }
        console.log(JSON.stringify(backBodyNode));
        backBodyNode.rst = data;

        backBodyNode.count = cursor.count(function(err, count){
            backBodyNode.count = count;
            cb(null, backBodyNode);
        });
    });
};

module.exports = new GamePageControl();