var async = require('async');
var dc = require('mcp_db').dc;
var esut = require("easy_util");
var cons = require('mcp_constants');
var msgType = cons.msgType;
var msgStatus = cons.msgStatus;
var log = esut.log;
var digestUtil = esut.digestUtil;

var MsgService = function(){};

MsgService.prototype.saveTerm = function(term, cb)
{
    var self = this;
    async.waterfall([
        //保存消息
        function(cb)
        {
            var msg = {_id:digestUtil.createUUID(),
                parentId:'', type:msgType.TERM, subCount:0, finishCount:0,
                status:msgStatus.INIT, version:0, createTime:new Date().getTime()};
            var table = dc.mg_msg.get("msg");
            table.save(msg, [], function(err, data){
                cb(err, msg);
            });
        },
        //保存消息内容
        function(msg, cb)
        {
            var detail_term = {gameCode:term.gameCode, code:term.code,
                nextCode:term.nextCode, status:term.status,
                msgId:msg._id, termId:term.id};
            detail_term._id = detail_term.gameCode + "_" + detail_term.code +
                "_" + detail_term.status;
            var detail_term_table = dc.mg_msg.get("detail_term");
            detail_term_table.save(detail_term, [], function(err, data){
                cb(err);
            });
        }
    ], function (err, result) {
        cb(err, result);
    });
}

MsgService.prototype.updateStatus = function(id, status, cb)
{
    var self = this;
    var table = dc.mg_msg.get("msg");
    var cond = {_id:id};
    var data = {$set:{status:status}};
    table.update(cond, data, [], function(err, data){
        if(err)
        {
            log.info(err);
        }
        else
        {
            if(cb)
            {
                cb(err, data);
            }
        }
    });
}

module.exports = new MsgService();
