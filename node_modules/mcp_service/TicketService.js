var async = require('async');
var dc = require("mcp_db").dc;
var esut = require('easy_util');
var termStatus = require("mcp_constants").termStatus;
var log = esut.log;
var config = require('mcp_config');
var ec = config.ec;
var transaction = require('./Transaction.js');

var cons = require('mcp_constants');
var userType = cons.userType;
var msgStatus = cons.msgStatus;
var msgType = cons.msgType;
var ticketPrintQueenStatus = cons.ticketPrintQueenStatus;
var ticketPrintStatus = cons.ticketPrintStatus;
var ticketStatus = cons.ticketStatus;


var config = require('mcp_config');
var prop = config.prop;

var TicketService = function(){};

/**
 * 出票成功
 * @param cb
 */
TicketService.prototype.printSuccess = function(ticket, cb)
{
    var self = this;
    async.waterfall([
        //从出票队列中删除
        function(cb)
        {
            var table = dc.mg.get("printqueen");
            var cond = {_id:ticket.id};
            table.findAndRemove(cond, {}, [], function(err, data){
                cb(err, data);
            });
        },
        //更新数据库状态
        function(backTickt, cb)
        {
            var table = dc.main.get("tticket");
            var cond = {id:ticket.id};
            var data = {$set:{printStatus:ticketPrintStatus.PRINT_SUCCESS}};
            table.update(cond, data, [], function(err, data){
                cb(err, backTickt);
            });
        },
        //保存到算奖队列
        function(backTickt, cb)
        {
            log.info(backTickt);
            var sep = backTickt._id%prop.drawCount;
            var colName = backTickt.gameCode + "_" + backTickt.termCode + "_" + sep;
            var table = dc.mg.getConn().collection(colName);
            table.save(backTickt, [], function(err, data){
                cb(err, data);
            });
        }
    ], function (err, result) {
        cb(err, result);
    });
}

/**
 * 票据中奖
 * @param ticket
 * @param cb
 */
TicketService.prototype.hit = function(ticket, cb)
{
    var table = dc.main.get("tticket");
    //var table = dc.mg.getConn().collection(colName);
    var cond = {id:ticket.id};
    var data = {$set:{status:ticketStatus.HIT, bonus:ticket.bonus,
    bonusBeforeTax:ticket.bonusBeforeTax, bonusDetail:JSON.stringify(ticket.bonusDetail)}};
    table.update(cond, data, {j:true}, function(err, data){
        log.info(data);
        if(cb)
        {
            cb(err, data);
        }
    });
}


/**
 * 票据未中奖
 * @param ticket
 * @param cb
 */
TicketService.prototype.notHit = function(ticket, cb)
{
    var table = dc.main.get("tticket");
    //var table = dc.mg.getConn().collection(colName);
    var cond = {id:ticket.id};
    var data = {$set:{status:ticketStatus.NOT_HIT}};
    table.update(cond, data, {j:true}, function(err, data){
        log.info(data);
        if(cb)
        {
            cb(err, data);
        }
    });
}

TicketService.prototype.updateBonusInfo = function(ticket, cb)
{
    var self = this;
    if(ticket.bonus > 0)
    {
        self.hit(ticket, cb);
    }
    else
    {
        self.notHit(ticket, cb);
    }
}

module.exports = new TicketService();