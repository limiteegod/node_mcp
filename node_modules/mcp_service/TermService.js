var async = require('async');
var dc = require("mcp_db").dc;
var esut = require('easy_util');
var termStatus = require("mcp_constants").termStatus;
var log = esut.log;

var TermService = function(){};

/**
 *
 * @param cb
 */
TermService.prototype.findToOpen = function(cb)
{
    var self = this;
    var table = dc.main.get("term");
    async.waterfall([
        //find term to open
        function(cb)
        {
            var now = new Date().getTime();
            log.info(now);
            var cond = {status:termStatus.NOT_ON_SALE,
                openTime:{$lt:now}};
            table.find(cond, {gameCode:1, code:1, nextCode:1, version:1}).toArray(function(err, data){
                if(err) cb(err);
                if(data.length == 0)
                {
                    cb(new Error("no term to open."));
                }
                else
                {
                    cb(null, data[0]);
                }
            });
        },
        //update term status
        function(term, cb)
        {
            var cond = {id:term.id, version:term.version};
            term.version++;
            term.status = termStatus.PRE_ON_SALE;
            var data = {$set:{status:term.status, version:term.version}};
            table.update(cond, data, {}, function(err, data){
                if(err) cb(err);
                log.info(data);
                if(data.length < 1)
                {
                    cb("transaction failed");
                }
                cb(err, term);
            });
        }
    ], function (err, result) {
        if(err)
        {
            cb(err, null);
        }
        else
        {
            cb(null, result);
        }
    });
}

module.exports = new TermService();